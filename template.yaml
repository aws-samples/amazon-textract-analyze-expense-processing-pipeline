AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: TextractAnalyzeExpense

Resources:
  CloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LoggingBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: !Sub "cloudtrail.${AWS::URLSuffix}"
            Action: "s3:GetBucketAcl"
            Resource: !GetAtt LoggingBucket.Arn
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: !Sub "cloudtrail.${AWS::URLSuffix}"
            Action: "s3:PutObject"
            Resource: !Sub "${LoggingBucket.Arn}/AWSLogs/${AWS::AccountId}/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"
          - Sid: AllowSSLRequestsOnly
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !GetAtt LoggingBucket.Arn
              - !Sub "${LoggingBucket.Arn}/*"
            Condition:
              Bool:
                "aws:SecureTransport": false

  SourceBucket:
    Type: AWS::S3::Bucket
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: "Ignore access logging"
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      AccessControl: BucketOwnerFullControl
      LifecycleConfiguration:
        Rules:
          - AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 3
            NoncurrentVersionExpirationInDays: 3
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Description
          Value: Textract AnalyzeExpense Demo Bucket
      VersioningConfiguration:
        Status: Enabled

  SourceBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SourceBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowSSLRequestsOnly
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !GetAtt SourceBucket.Arn
              - !Sub "${SourceBucket.Arn}/*"
            Condition:
              Bool:
                "aws:SecureTransport": false

  LoggingBucket:
    Type: AWS::S3::Bucket
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: "Ignore access logging"
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      AccessControl: BucketOwnerFullControl
      LifecycleConfiguration:
        Rules:
          - AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 3
            NoncurrentVersionExpirationInDays: 3
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Description
          Value: Textract AnalyzeExpense Demo Bucket for CloudTrail and EventBridge Integration with Amazon S3 and AWS Lambda
      VersioningConfiguration:
        Status: Enabled

  OutputBucket:
    Type: AWS::S3::Bucket
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: "Ignore access logging"
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      AccessControl: BucketOwnerFullControl
      LifecycleConfiguration:
        Rules:
          - AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 3
            NoncurrentVersionExpirationInDays: 3
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Description
          Value: Textract AnalyzeExpense Demo Bucket for storing the Outputs
      VersioningConfiguration:
        Status: Enabled

  OutputBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref OutputBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowSSLRequestsOnly
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !GetAtt OutputBucket.Arn
              - !Sub "${OutputBucket.Arn}/*"
            Condition:
              Bool:
                "aws:SecureTransport": false

  EventCloudTrail:
      Type: AWS::CloudTrail::Trail
      DependsOn: CloudTrailBucketPolicy
      Properties:
        TrailName: !Ref LoggingBucket
        S3BucketName: !Ref LoggingBucket
        IsLogging: true
        IsMultiRegionTrail: false
        EventSelectors:
          - IncludeManagementEvents: false
            DataResources:
            - Type: AWS::S3::Object
              Values:
                - !Sub "${SourceBucket.Arn}/"
        IncludeGlobalServiceEvents: false

  AWSLambdaAnalyzeExpenseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub "lambda.${AWS::URLSuffix}"
                - !Sub "textract.${AWS::URLSuffix}"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonTextractFullAccess"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  LambdaPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: S3
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: "s3:GetBucket*"
            Resource: !GetAtt SourceBucket.Arn
          - Effect: Allow
            Action:
              - "s3:PutObject*"
              - "s3:GetObject*"
            Resource: !Sub "${SourceBucket.Arn}/*"
          - Effect: Allow
            Action: "s3:GetBucket*"
            Resource: !GetAtt OutputBucket.Arn
          - Effect: Allow
            Action:
              - "s3:PutObject*"
              - "s3:GetObject*"
            Resource: !Sub "${OutputBucket.Arn}/*"
      Roles:
        - !Ref AWSLambdaAnalyzeExpenseRole

  EventConsumerFunction:
    Type: AWS::Lambda::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: "Ignore CloudWatch access"
          - id: W89
            reason: "Ignore VPC"
    Properties:
      Code:
        S3Bucket: my-source-bucket
        S3Key: archive.zip
      Handler: lambda_function.lambda_handler
      ReservedConcurrentExecutions: 1
      Runtime: python3.9
      Timeout: 20
      Environment:
        Variables:
          outputs3bucketname: !Ref OutputBucket
      Role: !GetAtt AWSLambdaAnalyzeExpenseRole.Arn

  EventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "EventRule"
      State: "ENABLED"
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "AWS API Call via CloudTrail"
        detail:
          eventSource:
            - !Sub "s3.${AWS::URLSuffix}"
          eventName:
            - "PutObject"
          requestParameters:
            bucketName:
              - !Ref SourceBucket
      Targets:
        - Arn: !GetAtt EventConsumerFunction.Arn
          Id: "EventConsumerFunctionTarget"

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref "EventConsumerFunction"
      Action: "lambda:InvokeFunction"
      Principal: !Sub "events.${AWS::URLSuffix}"
      SourceArn: !GetAtt EventRule.Arn
